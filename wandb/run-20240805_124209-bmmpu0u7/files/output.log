torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 1/100, Loss: 0.17463432485237718
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
/home/mmuhleth/discrete_diffusion_graph/utils/graphs.py:103: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  loss_matrix = loss_matrix * (1-2*torch.tensor(sigma_list).unsqueeze(-1).unsqueeze(-2).expand(grad_log_q_noise_list.size(0),grad_log_q_noise_list.size(1),grad_log_q_noise_list.size(2)).to(device)+1.0/len(sigma_list))
/home/mmuhleth/miniconda3/envs/py38/lib/python3.11/site-packages/torch/optim/lr_scheduler.py:156: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 2/100, Loss: 0.08045763685368001
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 3/100, Loss: 0.07173397182486951
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 4/100, Loss: 0.06294363911729306
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 5/100, Loss: 0.05809086316730827
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 6/100, Loss: 0.053134849411435425
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 7/100, Loss: 0.05112738371826708
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 8/100, Loss: 0.04750063444953412
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 9/100, Loss: 0.048884792369790375
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 10/100, Loss: 0.04772548621986061
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([8, 1, 16, 16])
torch.Size([8])
Epoch 11/100, Loss: 0.0436106933047995
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
torch.Size([32, 1, 16, 16])
torch.Size([32])
Traceback (most recent call last):
  File "/home/mmuhleth/discrete_diffusion_graph/train_unet_adj_neigh.py", line 79, in <module>
    fit(model, optimizer, dataloader, max_epoch=100, device=device)
  File "/home/mmuhleth/discrete_diffusion_graph/train_unet_adj_neigh.py", line 44, in fit
    train_adj_b_noisy_matrix, grad_log_noise_adj_list = gen_list_of_data_single_neigh(data, sigma_list, device, grid_shape=(4, 4))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mmuhleth/discrete_diffusion_graph/utils/graphs.py", line 58, in gen_list_of_data_single_neigh
    train_noise_adj_b, grad_log_q_noise = discretenoise_adj_neigh(train_adj_b[count],sigma=sigma_i, device=device, grid_shape=grid_shape)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mmuhleth/discrete_diffusion_graph/utils/graphs.py", line 230, in discretenoise_adj_neigh
    noise_upper = torch.bernoulli(bernoulli_adj).triu(diagonal=1)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt