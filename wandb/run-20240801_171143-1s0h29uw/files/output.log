/Users/mmuhleth/Desktop/diffusion_graph/train_ppgn_vlb.py:51: DeprecationWarning: This function is deprecated. Please call randint(1, 32 + 1) instead
  sigma_ind_list = np.random.random_integers(low=1,high=num_levels,size=data.size(0))
/Users/mmuhleth/Desktop/diffusion_graph/utils/graphs.py:231: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mask = torch.tensor(mask, dtype=torch.float32).to(device)
/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/optim/lr_scheduler.py:232: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 1/40, Loss: 895.0315589904785
Epoch 2/40, Loss: 585.1142501831055
Epoch 3/40, Loss: 395.32221508026123
Epoch 4/40, Loss: nan
Epoch 5/40, Loss: nan
Epoch 6/40, Loss: nan
Traceback (most recent call last):
  File "/Users/mmuhleth/Desktop/diffusion_graph/train_ppgn_vlb.py", line 130, in <module>
    fit(model, optimizer, dataloader, max_epoch=40, device=device)
  File "/Users/mmuhleth/Desktop/diffusion_graph/train_ppgn_vlb.py", line 73, in fit
    score_batch = model(train_noise_adj_b_chunked[i].unsqueeze(0).to(device), train_noise_adj_b_chunked[i].to(device), mask, sigma.item()).to(device)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/mmuhleth/Desktop/diffusion_graph/model/model2.py", line 258, in forward
    out = self.forward_cat(A, node_features, mask, noiselevel)
  File "/Users/mmuhleth/Desktop/diffusion_graph/model/model2.py", line 303, in forward_cat
    u = conv(u, mask) + (u if self.residual else 0)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/mmuhleth/Desktop/diffusion_graph/model/model2.py", line 58, in forward
    out1 = self.m1(x).permute(0, 3, 1, 2) * mask  # batch, out_feat, N, N
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/container.py", line 219, in forward
    input = module(input)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/activation.py", line 799, in forward
    return F.leaky_relu(input, self.negative_slope, self.inplace)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/functional.py", line 1677, in leaky_relu
    result = torch._C._nn.leaky_relu(input, negative_slope)
KeyboardInterrupt
Traceback (most recent call last):
  File "/Users/mmuhleth/Desktop/diffusion_graph/train_ppgn_vlb.py", line 130, in <module>
    fit(model, optimizer, dataloader, max_epoch=40, device=device)
  File "/Users/mmuhleth/Desktop/diffusion_graph/train_ppgn_vlb.py", line 73, in fit
    score_batch = model(train_noise_adj_b_chunked[i].unsqueeze(0).to(device), train_noise_adj_b_chunked[i].to(device), mask, sigma.item()).to(device)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/mmuhleth/Desktop/diffusion_graph/model/model2.py", line 258, in forward
    out = self.forward_cat(A, node_features, mask, noiselevel)
  File "/Users/mmuhleth/Desktop/diffusion_graph/model/model2.py", line 303, in forward_cat
    u = conv(u, mask) + (u if self.residual else 0)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/mmuhleth/Desktop/diffusion_graph/model/model2.py", line 58, in forward
    out1 = self.m1(x).permute(0, 3, 1, 2) * mask  # batch, out_feat, N, N
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/container.py", line 219, in forward
    input = module(input)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/modules/activation.py", line 799, in forward
    return F.leaky_relu(input, self.negative_slope, self.inplace)
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/nn/functional.py", line 1677, in leaky_relu
    result = torch._C._nn.leaky_relu(input, negative_slope)
KeyboardInterrupt