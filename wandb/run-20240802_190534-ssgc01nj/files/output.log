torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
/Users/mmuhleth/Desktop/diffusion_graph/utils/graphs.py:74: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  loss_matrix = loss_matrix * (1-2*torch.tensor(sigma_list).unsqueeze(-1).unsqueeze(-2).expand(grad_log_q_noise_list.size(0),grad_log_q_noise_list.size(1),grad_log_q_noise_list.size(2)).to(device)+1.0/len(sigma_list))
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
torch.Size([1, 25, 25, 1]) torch.Size([1, 25, 25, 1])
Traceback (most recent call last):
  File "/Users/mmuhleth/Desktop/diffusion_graph/train_ppgn_simple_adj.py", line 108, in <module>
    fit(model, optimizer, dataloader, max_epoch=40, device=device)
  File "/Users/mmuhleth/Desktop/diffusion_graph/train_ppgn_simple_adj.py", line 62, in fit
    l.backward()
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/autograd/graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
Traceback (most recent call last):
  File "/Users/mmuhleth/Desktop/diffusion_graph/train_ppgn_simple_adj.py", line 108, in <module>
    fit(model, optimizer, dataloader, max_epoch=40, device=device)
  File "/Users/mmuhleth/Desktop/diffusion_graph/train_ppgn_simple_adj.py", line 62, in fit
    l.backward()
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/opt/anaconda3/envs/digress/lib/python3.9/site-packages/torch/autograd/graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt